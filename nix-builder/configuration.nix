{ config, pkgs, ... }:

{
  # Basic system configuration
  imports = [
    ./modules/hardware-configuration.nix # Autogenerated by NixOS installer
  ];
  system.stateVersion = "24.05";
  boot.loader.grub.enable = true;
  boot.loader.grub.device = "/dev/xvda";

  # Set your timezone
  time.timeZone = "UTC";
  # Enable SSH for remote access
  services.openssh = {
    enable = true;
    permitRootLogin = "yes";
    passwordAuthentication = false;
    openFirewall = true;
  };

  virtualisation.docker.enable = true;

  # Create a default user for development
  # users.users.cache = {
  #   isNormalUser = true;
  #   home = "/home/cache";
  #   description = "";
  #   extraGroups = [ "networkmanager" "wheel" "docker" ];
  #   # openssh.authorizedKeys.keys = [];
  # };

  # Enable sudo for wheel group
  security.sudo = {
    enable = true;
    wheelNeedsPassword = false;
  };

  # Set up development tools and utilities
  packages = import ./modules/packages.nix {inherit pkgs;};
  # Firewall configuration
  networking.firewall = {
    enable = true;
    allowedTCPPorts = [ 22 80 443 ]; # Open ports for SSH, HTTP, and HTTPS
  };

  # Set up a basic Nix cache to speed up package installations
  nix.settings = {
    trusted-users = [ "root" ];
    binary-caches = [ "https://cache.nixos.org" ];
    experimental-features = [ "nix-command" "flakes" ];
  };

  # Miscellaneous tweaks
  environment.variables = {
    EDITOR = "vim"; # Set default editor
    PAGER = "less"; # Set default pager
  };

  services.nix-serve = {
    enable = true;
    secretKeyFile = "/var/cache-priv-key.pem";
  };
  # Optional: Add graphical tools for GUI development (if needed)
  # services.xserver.enable = true;
  # services.xserver.displayManager.lightdm.enable = true;
  # services.xserver.desktopManager.gnome.enable = true;
}
